{"version":3,"sources":["util.js","actions.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["min","max","Math","floor","random","id","replace","toLowerCase","arr","key","length","s","i","actions","graph","east","locked","Game","props","state","input","prevInput","moves","currentRoom","visitedRooms","outputs","failedCommandCount","inventory","game","initialInventory","onBox","outputRef","React","createRef","inputRef","handleInput","bind","handleChange","detectSubmit","addOutput","getItemByID","resolveAlternateTriggers","isDirectionValid","room","this","current","focus","fillStores","rooms","Object","prototype","hasOwnProperty","call","items","obj","term","alternates","alternateTriggers","console","warn","alt","j","match","graphIndex","getGraphIndexByID","shelfID","node","push","back","west","up","title","canClimb","shelfIndex","ids","thisCollection","catalogue","collections","util","collectionID","childrenIds","a","children","c","itemId","collectionIndex","d","Description","description","Title","Date","childrenList","map","details","Extent","includes","canTake","name","join","list","messages","shelfDescription","getMessage","includeRoom","includeInventory","item","examined","visibleItems","vi","searched","hiddenItems","hi","setState","prevState","itemID","splice","roomId","listSeperate","log","e","target","value","keyCode","preventDefault","msg","outputEl","scrollTo","top","scrollHeight","behavior","word","synonyms","insertWord","message","direction","getNodeByID","toLocaleLowerCase","command","words","split","resolveSynonyms","verb","noun","currentNode","window","location","reload","itemExists","interactions","action","addItemToRoom","removeItemFromInventory","undefined","nextRoom","visited","removeItemFromRoom","addToInventory","substr","droppedItems","resolveDescription","searchDescription","outputItems","index","ps","p","className","ref","onKeyPress","onChange","onClick","Component","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76641280.chunk.js","sourcesContent":["export default {\r\n    gri: function (min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    },\r\n    sanitiseID: function (id) {\r\n        return id.replace(' ', '-').toLowerCase()\r\n    },\r\n\r\n    joinEnglish: function (arr, key = false) {\r\n        if (arr.length === 1) {\r\n            if (key){\r\n                return arr[0][key];\r\n            } else {\r\n                return arr[0];\r\n            }\r\n        } else if (arr.length === 2) {\r\n            if (key){\r\n                return `${arr[0][key]} and ${arr[1][key]}`;\r\n            } else {\r\n                return `${arr[0]} and ${arr[1]}`;\r\n            }\r\n        } else {\r\n            let s = '';\r\n            for (let i = 0; i < arr.length - 1; i++) {\r\n                if (key){\r\n                    s += `${arr[i][key]}, `\r\n                } else {\r\n                    s += `${arr[i]}, `\r\n                }\r\n            }\r\n            if (key){\r\n                s += `and ${arr[arr.length - 1][key]}`\r\n            } else {\r\n                s += `and ${arr[arr.length - 1]}`\r\n            }\r\n            return s;\r\n        }\r\n    }\r\n}","const actions = {\r\n    unlockStoreDoor: function (graph) {\r\n        graph[1].east.locked = false;\r\n        return graph;\r\n    }\r\n}\r\n\r\nexport {actions}","import React from 'react'\r\nimport game from './game.json'\r\nimport catalogue from './catalogue.json'\r\nimport util from './util.js'\r\nimport { actions } from './actions.js'\r\n// import Map from './Map.js'\r\nimport './Game.css'\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            input: '',\r\n            prevInput: '',\r\n            moves: 0,\r\n            currentRoom: 'corridor1',\r\n            visitedRooms: [],\r\n            outputs: [],\r\n            failedCommandCount: 0,\r\n            inventory: game.initialInventory,\r\n            onBox: false\r\n        }\r\n\r\n        this.outputRef = React.createRef()\r\n        this.inputRef = React.createRef()\r\n\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.detectSubmit = this.detectSubmit.bind(this)\r\n        this.addOutput = this.addOutput.bind(this)\r\n        this.getItemByID = this.getItemByID.bind(this)\r\n        this.resolveAlternateTriggers = this.resolveAlternateTriggers.bind(this);\r\n        this.isDirectionValid = this.isDirectionValid.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.inputRef.current.focus();\r\n        this.fillStores()\r\n        for (let room in game.rooms) {\r\n            if (Object.prototype.hasOwnProperty.call(game.rooms, room)) {\r\n                if (!game.rooms[room].items) {\r\n                    game.rooms[room].items = []\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveAlternateTriggers(obj, term) {\r\n        let alternates = obj.alternateTriggers;\r\n        if (alternates) {\r\n            console.warn('Object has alternate triggers, searching...')\r\n            for (let i = 0; i < alternates.length; i++) {\r\n                let alt = alternates[i];\r\n                for (let j = 0; j < alt.match.length; j++) {\r\n                    if (alt.match[j] === term) {\r\n                        return alt.term;\r\n                    }\r\n                }\r\n            }\r\n            console.warn('No match found.')\r\n            return term;\r\n        } else {\r\n            console.warn('Object has no alternate triggers.')\r\n            return term;\r\n        }\r\n    }\r\n\r\n    getGraphIndexByID(id) {\r\n        for (let i = 0; i < game.graph.length; i++) {\r\n            if (game.graph[i].id === id) {\r\n                return i;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    fillStores() {\r\n        const shelfCount = 10;\r\n        const graphIndex = this.getGraphIndexByID('store1')\r\n\r\n        for (let i = 0; i < shelfCount; i++) {\r\n            let shelfID = `store1-shelf${i + 1}`;\r\n            game.graph[graphIndex][`shelf-${i + 1}`] = { node: shelfID }\r\n            game.graph.push({\r\n                id: shelfID,\r\n                back: { node: 'store1' },\r\n                west: { node: 'corridor1' },\r\n                up: { node: 'onShelf' }\r\n            })\r\n            game.rooms[shelfID] = {\r\n                id: shelfID,\r\n                title: `Shelf ${i + 1}`,\r\n                canClimb: true\r\n            }\r\n            let collectionCount = 10;\r\n            let shelfIndex = this.getGraphIndexByID(shelfID)\r\n            let ids = []\r\n            for (let j = 0; j < collectionCount; j++) {\r\n                let thisCollection = catalogue.collections[util.gri(0, 200)];\r\n                let id = util.sanitiseID(thisCollection.id)\r\n                let collectionID = shelfID + '-' + id\r\n                ids.push(id);\r\n\r\n                game.graph[shelfIndex][id] = { node: collectionID }\r\n                game.graph.push({\r\n                    id: collectionID,\r\n                    back: { node: shelfID }\r\n                })\r\n\r\n                let childrenIds = []\r\n                for (let a = 0; a < thisCollection.children.length; a++) {\r\n                    let c = thisCollection.children[a];\r\n                    if (c.id) {\r\n                        let itemId = util.sanitiseID(c.id);\r\n                        childrenIds.push(itemId)\r\n                        let collectionIndex = this.getGraphIndexByID(collectionID)\r\n                        game.graph[collectionIndex][itemId] = { node: itemId }\r\n                        game.graph.push({\r\n                            id: itemId,\r\n                            back: { node: collectionID }\r\n                        })\r\n\r\n                        let d = '';\r\n                        if (c.Description) { d = c.Description }\r\n\r\n                        game.rooms[itemId] = {\r\n                            id: itemId,\r\n                            title: `${itemId}`,\r\n                            description: `${c.Title}(${c.Date})/n${d}`,\r\n                        }\r\n                    }\r\n                }\r\n                let childrenList = childrenIds.map(function (id) {\r\n                    return `/n—${id}`\r\n                })\r\n\r\n                let items = []\r\n                if (thisCollection.details.Extent) {\r\n                    if (thisCollection.details.Extent.toLowerCase().includes('box')) {\r\n                        items.push({\r\n                            canTake: true,\r\n                            id: \"box\",\r\n                            name: \"Archival Box\",\r\n                            description: \"TODO its a box innit\"\r\n                        })\r\n                    }\r\n\r\n                    if (thisCollection.details.Extent.toLowerCase().includes('file')) {\r\n                        items.push({\r\n                            canTake: true,\r\n                            id: \"file\",\r\n                            name: \"Archival File\",\r\n                            description: \"TODO its a file innit\"\r\n                        })\r\n                    }\r\n\r\n                    if (thisCollection.details.Extent.toLowerCase().includes('folder')) {\r\n                        items.push({\r\n                            canTake: true,\r\n                            id: \"folder\",\r\n                            name: \"Archival Folder\",\r\n                            description: \"TODO its a foder innit\"\r\n                        })\r\n                    }\r\n                }\r\n\r\n                game.rooms[collectionID] = {\r\n                    id: collectionID,\r\n                    title: id,\r\n                    description: `The collection consists of ${thisCollection.details.Extent}. The catalogue entry reads:/n\"${thisCollection.details.Title} (${thisCollection.details.Date})\"./n Items contained within:${childrenList.join('')}`,\r\n                    items: items\r\n                }\r\n            }\r\n\r\n            let list = ids.map(function (id) {\r\n                return `/n—${id}`\r\n            })\r\n\r\n            game.rooms[shelfID].description = `${game.messages.shelfDescription[0]} The label on the shelf tells you that it contains the following collections: ${list.join('')}`;\r\n        }\r\n        this.addOutput('')\r\n        this.addOutput('')\r\n        this.addOutput('')\r\n        this.addOutput('')\r\n        this.addOutput(this.getMessage('init'))\r\n    }\r\n\r\n    getNodeByID(id) {\r\n        for (let i = 0; i < game.graph.length; i++) {\r\n            if (game.graph[i].id === id) { return game.graph[i] }\r\n        }\r\n        console.warn(`Couldn't find node with ID \"${id}\"`)\r\n    }\r\n\r\n    getItemByID(id, includeRoom = true, includeInventory = true) {\r\n        id = this.resolveAlternateTriggers(game.rooms[this.state.currentRoom], id)\r\n        if (includeRoom) {\r\n            for (let i = 0; i < game.rooms[this.state.currentRoom].items.length; i++) {\r\n                let item = game.rooms[this.state.currentRoom].items[i];\r\n                if (item.id === id) {\r\n                    game.rooms[this.state.currentRoom].items[i].examined = true;\r\n                    return item\r\n                }\r\n                if (item.examined && item.visibleItems) {\r\n                    for (let j = 0; j < item.visibleItems.length; j++) {\r\n                        let vi = item.visibleItems[j];\r\n                        if (vi.id === id) {\r\n                            return vi;\r\n                        }\r\n                    }\r\n                }\r\n                if (item.searched && item.hiddenItems) {\r\n                    for (let j = 0; j < item.hiddenItems.length; j++) {\r\n                        let hi = item.hiddenItems[j];\r\n                        if (hi.id === id) {\r\n                            return hi;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (includeInventory) {\r\n\r\n            for (let i = 0; i < this.state.inventory.length; i++) {\r\n                if (this.state.inventory[i].id === id) {\r\n                    return this.state.inventory[i]\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    addToInventory(item) {\r\n        this.setState(function (prevState) {\r\n            prevState.inventory.push(item);\r\n            return prevState\r\n        })\r\n    }\r\n    removeItemFromInventory(itemID) {\r\n        for (let i = 0; i < this.state.inventory.length; i++) {\r\n            if (this.state.inventory[i].id === itemID) {\r\n                this.setState((prevState) => {\r\n                    prevState.inventory.splice(i, 1)\r\n                    return prevState;\r\n                })\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    addItemToRoom(item, roomId) {\r\n        item.listSeperate = true;\r\n        item.canTake = true;\r\n        game.rooms[roomId].items.push(item);\r\n        console.log(game.rooms[roomId])\r\n    }\r\n\r\n    removeItemFromRoom(id) {\r\n        console.log(`Removing ${id}`)\r\n        for (let i = 0; i < game.rooms[this.state.currentRoom].items.length; i++) {\r\n            if (game.rooms[this.state.currentRoom].items[i].id === id) {\r\n                game.rooms[this.state.currentRoom].items.splice(i, 1)\r\n                return;\r\n            }\r\n            console.log(game.rooms[this.state.currentRoom].items[i])\r\n            if (game.rooms[this.state.currentRoom].items[i].visibleItems) {\r\n                for (let j = 0; j < game.rooms[this.state.currentRoom].items[i].visibleItems.length; j++) {\r\n                    if (game.rooms[this.state.currentRoom].items[i].visibleItems[j].id === id) {\r\n                        game.rooms[this.state.currentRoom].items[i].visibleItems.splice(j, 1)\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (game.rooms[this.state.currentRoom].items[i].hiddenItems) {\r\n                for (let j = 0; j < game.rooms[this.state.currentRoom].items[i].hiddenItems.length; j++) {\r\n                    if (game.rooms[this.state.currentRoom].items[i].hiddenItems[j].id === id) {\r\n                        game.rooms[this.state.currentRoom].items[i].hiddenItems.splice(j, 1)\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    handleChange(e) {\r\n        this.setState({\r\n            input: e.target.value\r\n        })\r\n    }\r\n\r\n    detectSubmit(e) {\r\n        if (e.key === 'Enter' && this.state.input !== '') {\r\n            this.handleInput()\r\n        }\r\n        if (e.keyCode === 38) {\r\n            this.setState({ input: this.state.prevInput })\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n    addOutput(msg) {\r\n        this.setState(function (prevState) {\r\n            prevState.outputs.push(msg);\r\n            return prevState;\r\n        }, () => {\r\n            let outputEl = this.outputRef.current;\r\n            outputEl.scrollTo({\r\n                top: outputEl.scrollHeight,\r\n                behavior: 'smooth'\r\n            });\r\n        })\r\n    }\r\n\r\n    resolveSynonyms(word) {\r\n        for (let i = 0; i < game.synonyms.length; i++) {\r\n            for (let j = 0; j < game.synonyms[i].match.length; j++) {\r\n                if (game.synonyms[i].match[j] === word) {\r\n                    return game.synonyms[i].term;\r\n                }\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    resolveDescription(item) {\r\n        let d = item.description;\r\n        if (d.includes('$visibleItems')) {\r\n            let visibleItems = util.joinEnglish(item.visibleItems, 'listName')\r\n            d = d.replace('$visibleItems', visibleItems)\r\n        }\r\n\r\n        return d;\r\n    }\r\n\r\n    getMessage(msg, insertWord = '') {\r\n        if (game.messages[msg]) {\r\n            let message = game.messages[msg][util.gri(0, game.messages[msg].length - 1)]\r\n            message = message.replace('%', insertWord)\r\n            return message\r\n        }\r\n    }\r\n\r\n    isDirectionValid(direction) {\r\n        if (this.getNodeByID(this.state.currentRoom)[direction]) {\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleInput(s) {\r\n        if (!s) {\r\n            this.setState({ prevInput: this.state.input })\r\n            s = this.state.input.replace('at ', '')\r\n            s = s.replace('through ', '')\r\n            s = s.replace('into ', '')\r\n            s = s.replace('in ', '')\r\n            s = s.replace('to ', '')\r\n            s = s.replace('on ', '')\r\n            s = s.replace('onto ', '')\r\n            s = s.replace('the ', '')\r\n            s = s.toLocaleLowerCase()\r\n\r\n            this.setState(function (prevState) {\r\n                prevState.outputs.push('> ' + this.state.input);\r\n                return prevState;\r\n            })\r\n        }\r\n        let command = []\r\n        let words = s.split(' ');\r\n        for (let i = 0; i < words.length; i++) {\r\n            command.push(this.resolveSynonyms(words[i]))\r\n        }\r\n        console.log(command)\r\n        let verb = command[0];\r\n        console.log(verb)\r\n        let noun = this.resolveSynonyms(command[1]);\r\n        let currentNode = this.getNodeByID(this.state.currentRoom);\r\n\r\n        if (noun === 'hatch') {\r\n            verb = 'climb'\r\n        }\r\n\r\n\r\n        this.setState({ input: '' })\r\n        if (command.length === 1) {\r\n            noun = this.resolveSynonyms(command[0])\r\n            if (noun === 'north' || noun === 'south' || noun === 'east' || noun === 'west' || noun === 'back' || this.isDirectionValid(noun)) {\r\n                verb = 'go'\r\n            } else if (noun === 'inventory') {\r\n                verb = 'examine'\r\n            }\r\n            else if (noun === 'help') {\r\n                this.addOutput(this.getMessage('help'))\r\n                return;\r\n            }\r\n            else if (noun === 'examine') {\r\n                verb = 'examine';\r\n                noun = 'around';\r\n            }\r\n            else if (noun === 'go') {\r\n                this.addOutput(this.getMessage('giveCompass'))\r\n                return;\r\n            } else if (this.getItemByID(noun)) {\r\n                verb = 'examine'\r\n            } else if (noun === 'reset') {\r\n                window.location.reload()\r\n            }\r\n        }\r\n        if (verb === 'use') {\r\n            console.log('In use flow')\r\n            let itemExists = this.getItemByID(noun)\r\n            let target = this.getItemByID(command[2]);\r\n            if (target && itemExists) {\r\n                target = this.resolveSynonyms(target)\r\n                if (target && target.interactions && target.interactions[noun]) {\r\n                    this.addOutput(target.interactions[noun].message);\r\n                    //TODO: Make this dynamicly controlled from game.json\r\n                    if (target.interactions[noun].action === 'unlockStoreDoor') {\r\n                        game.graph = actions.unlockStoreDoor(game.graph);\r\n                    } else if (target.interactions[noun].action === 'dropBox') {\r\n                        let item = this.getItemByID('box', false, true);\r\n                        this.addItemToRoom(item, this.state.currentRoom)\r\n                        this.removeItemFromInventory(item.id)\r\n                    } else if (target.interactions[noun].action === 'unlockCabinet'){\r\n                        game.rooms[this.state.currentRoom].items[0].locked = false;\r\n                        game.rooms[this.state.currentRoom].items[0].searched = true;\r\n                    }\r\n                    return;\r\n                } else if (target) {\r\n                    this.addOutput(this.getMessage('itemDidntWork'))\r\n                    return;\r\n                } else {\r\n                    this.addOutput(this.getMessage('noSuchThing'))\r\n                    return;\r\n                }\r\n            } else if (itemExists && command[2] === undefined) {\r\n                console.log(target)\r\n                this.addOutput(this.getMessage('giveTarget', command[1]))\r\n                return;\r\n            } else if (target === false) {\r\n                this.addOutput(this.getMessage('noSuchThing'))\r\n                return;\r\n            }\r\n        }\r\n        if (verb === 'climb') {\r\n            if (game.rooms[this.state.currentRoom].canClimb && noun === 'shelf') {\r\n                verb = 'go'\r\n                noun = 'up'\r\n            } else if (noun === 'box' && this.getItemByID('box', true, false)) {\r\n                this.setState({ onBox: true })\r\n                this.addOutput(this.getMessage('climbedBox'))\r\n                return;\r\n            } else if (noun === 'hatch' && this.state.currentRoom === 'onShelf') {\r\n                if (this.state.onBox === true) {\r\n                    this.addOutput('(Standing on the box, you are able to reach the hatch. You open it, and pull yourself up inside.)')\r\n                    verb = 'go'\r\n                    noun = 'up'\r\n                } else {\r\n                    this.addOutput(\"The hatch is just out of reach from where you are. If you could find something to stand on...\")\r\n                    return;\r\n                }\r\n            } else {\r\n                this.addOutput(this.getMessage('cantClimb'))\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (verb === 'open'){\r\n            let item = this.getItemByID(noun);\r\n            console.log(item)\r\n            if (item.locked === true){\r\n                this.addOutput(this.getMessage('locked'))\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (verb === 'drop') {\r\n            let item = this.getItemByID(noun, false, true);\r\n            console.log(item)\r\n            if (item) {\r\n                this.addOutput('Dropped.')\r\n                this.addItemToRoom(item, this.state.currentRoom)\r\n                this.removeItemFromInventory(item.id)\r\n                return;\r\n            } else if (!item) {\r\n                this.addOutput(this.getMessage('noSuchThingInInventory'))\r\n                return;\r\n            }\r\n        }\r\n        if (verb === 'go') {\r\n            // noun is a direction here\r\n            noun = this.resolveAlternateTriggers(currentNode, noun)\r\n\r\n            if (noun === 'shelf') {\r\n                if (command[2]) {\r\n                    noun = `shelf-${command[2]}`\r\n                } else {\r\n                    noun = `shelf-1`\r\n                    this.addOutput('(You walk up to Shelf 1)')\r\n                }\r\n            }\r\n\r\n            if (currentNode[noun] && currentNode[noun].locked !== true) {\r\n                let nextRoom = currentNode[noun].node;\r\n                this.setState(function (prevState) {\r\n                    prevState.currentRoom = nextRoom;\r\n                    return prevState;\r\n                })\r\n                if (!game.rooms[nextRoom].visited) {\r\n                    this.addOutput(`${game.rooms[nextRoom].title}/n${game.rooms[nextRoom].description}`)\r\n                    game.rooms[nextRoom].visited = true;\r\n                } else if (game.rooms[nextRoom].visited === true) {\r\n                    this.addOutput(game.rooms[nextRoom].title)\r\n                }\r\n            } else if (currentNode[noun] && currentNode[noun].locked === true) {\r\n                this.addOutput(this.getMessage('locked'))\r\n            }\r\n            else {\r\n                this.addOutput(this.getMessage('cantGoThatWay'))\r\n            }\r\n        } else if (verb === 'take') {\r\n            console.log(game.rooms[this.state.currentRoom])\r\n            let item = this.getItemByID(noun);\r\n            if (item && item.canTake) {\r\n                this.addOutput('Taken.')\r\n                this.removeItemFromRoom(item.id)\r\n                this.addToInventory(item)\r\n            } else if (item && !item.canTake) {\r\n                this.addOutput(this.getMessage('cantTakeThat'))\r\n            } else if (!item) {\r\n                this.addOutput(this.getMessage('noSuchThing'))\r\n            }\r\n        } else if (verb === 'examine') {\r\n            if (noun === 'inventory') {\r\n                let list = this.state.inventory.map(function (item) {\r\n                    return `— ${item.name}`\r\n                })\r\n                if (list.length > 0) {\r\n                    this.addOutput(`You are carrying:`)\r\n                    let s = '';\r\n                    for (const item in list) {\r\n                        s += `${list[item]}/n`\r\n                    }\r\n                    s = s.substr(0, s.length - 2)\r\n                    this.addOutput(s)\r\n                } else {\r\n                    this.addOutput(`Your're not carrying anything.`)\r\n                }\r\n            } else if (noun === 'around') {\r\n                let droppedItems = ''\r\n                for (let i = 0; i < game.rooms[this.state.currentRoom].items.length; i++) {\r\n                    let item = game.rooms[this.state.currentRoom].items[i];\r\n                    if (item.listSeperate) {\r\n                        droppedItems += `There is a ${item.name.toLowerCase()} here./n`\r\n                    }\r\n                }\r\n\r\n                this.addOutput(`${game.rooms[this.state.currentRoom].title}/n${game.rooms[this.state.currentRoom].description}/n${droppedItems}`)\r\n            } else {\r\n                let item = this.getItemByID(noun)\r\n                console.log(item)\r\n                if (item) {\r\n                    this.addOutput(this.resolveDescription(item))\r\n                } else {\r\n                    this.addOutput(this.getMessage('noSuchThing'))\r\n                }\r\n            }\r\n        } else if (verb === '___search') {\r\n            let item = this.getItemByID(noun)\r\n            if (item) {\r\n                if (item.hiddenItems) {\r\n                    item.searched = true;\r\n                    this.addOutput(item.searchDescription);\r\n                } else {\r\n                    item.searched = true;\r\n                    this.addOutput(this.getMessage('searchFailed'))\r\n                }\r\n            } else {\r\n                this.addOutput(this.getMessage('noSuchThing'))\r\n            }\r\n        } else {\r\n            this.setState(function (prevState) {\r\n                prevState.failedCommandCount++\r\n                return prevState;\r\n            })\r\n            if (this.state.failedCommandCount > 2) {\r\n                this.addOutput(this.getMessage('didntUnderstand'))\r\n                this.addOutput(this.getMessage('hint'))\r\n                this.setState({ failedCommandCount: 0 })\r\n            } else {\r\n                this.addOutput(this.getMessage('didntUnderstand'))\r\n            }\r\n        }\r\n\r\n        this.setState((prevState) => {\r\n            prevState.moves++;\r\n            return prevState;\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const outputItems = this.state.outputs.map(function (msg, index) {\r\n            let paragraphs = msg.split('/n');\r\n            const ps = paragraphs.map(function (p, index) {\r\n                return <p>{p}</p>\r\n            })\r\n            return <li key={index}>{ps}</li>\r\n        });\r\n\r\n        return (\r\n            <div className='game'>\r\n                <header className='game--header'>\r\n                    <div className=\"game--status\">\r\n                        {game.rooms[this.state.currentRoom].title}\r\n                    </div>\r\n                    <div className=\"game--status\">\r\n                        Moves: {this.state.moves}\r\n                    </div>\r\n                </header>\r\n                <div className='game--output' ref={this.outputRef}>\r\n                    <ul>\r\n                        {outputItems}\r\n                    </ul>\r\n                </div>\r\n                <div className='game--controls'>\r\n                    <input ref={this.inputRef} onKeyPress={this.detectSubmit} value={this.state.input} onChange={this.handleChange} className='controls--field'></input>\r\n                    <button onClick={this.handleInput} className='controls--button'>Enter</button>\r\n                </div>\r\n                {/* <Map graph={game.graph}></Map> */}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\nimport Game from './Game.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game></Game>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}